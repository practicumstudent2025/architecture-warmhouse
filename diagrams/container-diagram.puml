@startuml
!include <C4/C4_Container>

title Container Diagram: Экосистема "Умный посёлок"

Person(Пользователь, "Пользователь", "Житель посёлка\nУправляет устройствами\nНастраивает сценарии")
Person(Специалист, "Техподдержка", "Удалённая диагностика\nКонсультации")
Person(Партнёр, "Производитель устройств", "Интеграция оборудования\nПоддержка протоколов")

System_Ext(Партнёрские_устройства, "Устройства партнёров", "Zigbee/Z-Wave/Matter\nСтандартные протоколы")
System_Ext(Интернет_провайдер, "Интернет-инфраструктура", "Широкополосный доступ\nЛокальные сети")

System_Boundary(apps, "Клиентские приложения") {
    Container(Мобильное_приложение, "Мобильное приложение", "iOS/Android", "Самостоятельная настройка\nУправление сценариями")
    Container(Веб_портал, "Веб-портал", "React/TypeScript", "Расширенное управление\nАналитика")
}

System_Boundary(backend, "Бэкенд-сервисы") {
    Container(API_шлюз, "API Gateway", "Kong/Nginx", "Единая точка входа\nАутентификация\nМаршрутизация")
    
    ContainerDb(Пользовательские_данные, "User DB", "PostgreSQL", "Профили пользователей\nНастройки\nРоли")
    ContainerDb(Устройства_данные, "Telemetry DB", "Cassandra", "Историческая телеметрия\nСостояния устройств")
    ContainerDb(Конфигурации, "Config DB", "Redis", "Конфигурации устройств\nКеш сценарных правил")
    
    Container(Сервис_отопления, "Сервис отопления", "Go", "Управление термостатами\nЭнергооптимизация")
    Container(Сервис_освещения, "Сервис освещения", "Go", "Контроль света\nРасписания\nГруппы")
    Container(Сервис_безопасности, "Сервис безопасности", "Java", "Камеры\nДатчики движения\nТревожные события")
    Container(Сервис_ворот, "Сервис ворот", "Python", "Контроль доступа\nИнтеграция с домофонами")
    Container(Сервис_устройств, "Сервис устройств", "Go", "Регистрация устройств\nПротокольная трансляция\nСостояние")
    
    Container(Message_Queue, "Брокер сообщений", "Kafka", "Обработка событий\nТелеметрия в реальном времени")
    Container(Аналитика, "Сервис аналитики", "Python", "Анализ энергопотребления\nПредиктивные сценарии")
}

Rel(Пользователь, Мобильное_приложение, "Управляет устройствами", "HTTPS/WebSocket")
Rel(Пользователь, Веб_портал, "Конфигурирует сценарии", "HTTPS")
Rel(Специалист, Веб_портал, "Диагностика проблем", "HTTPS")

Rel(Мобильное_приложение, API_шлюз, "API запросы", "HTTPS")
Rel(Веб_портал, API_шлюз, "API запросы", "HTTPS")
Rel(API_шлюз, Сервис_отопления, "Команды управления", "gRPC")
Rel(API_шлюз, Сервис_освещения, "Управление светом", "gRPC")
Rel(API_шлюз, Сервис_безопасности, "Запросы безопасности", "gRPC")
Rel(API_шлюз, Сервис_ворот, "Контроль доступа", "gRPC")
Rel(API_шлюз, Сервис_устройств, "Регистрация/статус", "gRPC")

Rel(Сервис_отопления, Message_Queue, "Публикация событий", "Kafka")
Rel(Сервис_освещения, Message_Queue, "События освещения", "Kafka")
Rel(Сервис_безопасности, Message_Queue, "Тревожные события", "Kafka")
Rel(Message_Queue, Аналитика, "Потоковая обработка", "Kafka Streams")

Rel(Сервис_отопления, Устройства_данные, "Логирование телеметрии", "CQL")
Rel(Аналитика, Устройства_данные, "Запрос исторических данных", "CQL")
Rel(API_шлюз, Пользовательские_данные, "Аутентификация", "SQL")
Rel(Сервис_устройств, Конфигурации, "Чтение/запись конфигов", "Redis Protocol")

Rel(Сервис_устройств, Партнёрские_устройства, "Обмен данными", "MQTT/CoAP")
Rel(Сервис_устройств, Интернет_провайдер, "Подключение шлюзов", "TCP/IP")
Rel(Партнёр, Сервис_устройств, "Регистрация устройств", "HTTPS/REST")

legend top
  | Цвет | Назначение |
  | <#ADD8E6> | Основные сервисы |
  | <#90EE90> | Инфраструктура данных |
  | <#FFD700> | Пользовательские приложения |
endlegend
@enduml 